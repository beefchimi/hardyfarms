---
import SvgNoise from './SvgNoise.astro';

// TODO: Consider having `noMotion` start at the halfway point of
// the animation, that way we see more color on screen.
interface Props {
  noise?: boolean;
  noMotion?: boolean;
}

// TODO: This component should run a "hardware capabilities detection"
// and render a static image as a fallback when necessary.
const {noise = false, noMotion = false} = Astro.props;

/*
const colors = {
  bg: '#090719',
  blob1: '#052dff',
  blob2: '#9105ff',
  blob3: '#16d5ff',
  blob4: '#07048a',
  blob5: '#ed254e',
  blob6: '#9c0c7c',
  blob7: ['#17acff', '#b645eb', '#ffe7dd', '#e87c82'],
};
*/
---

<div class="BlobsBackground">
  <ul class:list={['BlobList', {noMotion}]}>
    <li class="blob-base Blob1"></li>
    <li class="blob-base Blob2"></li>
    <li class="blob-base Blob3"></li>
    <li class="blob-base Blob4"></li>
    <li class="blob-base Blob5"></li>
    <li class="blob-base Blob6"></li>
    <li class="blob-base Blob7"></li>
  </ul>

  {
    noise && (
      <div class="SvgNoiseWrapper">
        <SvgNoise screen />
      </div>
    )
  }
</div>

<style>
  @keyframes motionList {
    from {
      rotate: 0deg;
    }

    to {
      rotate: 360deg;
    }
  }

  .BlobsBackground {
    z-index: -1;
    position: fixed;
    inset: 0;
    display: grid;
    place-items: center;
    place-content: center;
    opacity: 0;
    background-color: var(--color-myrtle);
    animation: fadeIn 1s var(--ease) both;
    /* interaction-disable */
    pointer-events: none;
    touch-action: none;
    user-select: none;
  }

  .SvgNoiseWrapper {
    position: absolute;
    inset: 0;
    opacity: 0.1;
    mix-blend-mode: overlay;

    > svg {
      width: 100%;
      height: 100%;
      overflow: visible;
    }
  }

  .BlobList {
    width: max(100vw, 100vh);
    aspect-ratio: 1;
    filter: blur(100px);
    animation: motionList 60s ease-in-out infinite both;
  }

  .noMotion {
    width: 100vw;
    height: 100vh;
    aspect-ratio: unset;
    animation: unset;

    > .BlobItem {
      animation: unset;
    }
  }

  /* --- Blob Layers --- */

  .blob-base {
    position: absolute;
    aspect-ratio: 1;
    border-radius: 40%;
    animation-duration: 40s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
    animation-fill-mode: both;
  }

  @keyframes motionBlob1 {
    0%,
    100% {
      opacity: 0.882;
      scale: 1.4 1.2;
      translate: 0vw 0vh;
    }
    20% {
      opacity: 0.884;
      scale: 1 1;
      translate: 60vw 40vh;
    }
    60% {
      opacity: 0.883;
      scale: 1.4 1.2;
      translate: 20vw 80vh;
    }
    80% {
      opacity: 0.885;
      scale: 1.2 1.4;
      translate: -20vw 40vh;
    }
  }

  .Blob1 {
    top: 0;
    left: 0;
    width: max(20vw, 400px);
    background-color: var(--color-naples);
    animation-name: motionBlob1;
  }

  @keyframes motionBlob2 {
    0%,
    100% {
      opacity: 0.884;
      scale: 1 1;
      translate: 0vw 0vh;
    }
    25% {
      opacity: 0.882;
      scale: 1.4 1.2;
      translate: -60vw 40vh;
    }
    50% {
      opacity: 0.886;
      scale: 1.2 1.4;
      translate: -20vw 80vh;
    }
    75% {
      opacity: 0.882;
      scale: 1.3 1.3;
      translate: 20vw 40vh;
    }
  }

  .Blob2 {
    top: 0;
    right: 0;
    width: max(20vw, 320px);
    background-color: var(--color-salmon);
    animation-name: motionBlob2;
  }

  @keyframes motionBlob3 {
    0%,
    100% {
      opacity: 0.886;
      scale: 1.2 1.2;
      translate: 0vw 0vh;
    }
    40% {
      opacity: 0.883;
      scale: 1.6 1.8;
      translate: -60vw -40vh;
    }
    60% {
      opacity: 0.884;
      scale: 1.4 1.4;
      translate: -20vw -80vh;
    }
    80% {
      opacity: 0.882;
      scale: 1.8 1.6;
      translate: 0vw -40vh;
    }
  }

  .Blob3 {
    bottom: 0;
    right: 0;
    width: max(20vw, 240px);
    background-color: var(--color-coyote);
    animation-name: motionBlob3;
  }

  @keyframes motionBlob4 {
    0%,
    100% {
      opacity: 0.884;
      scale: 1 1;
      translate: 0vw 0vh;
    }
    20% {
      opacity: 0.882;
      scale: 1.4 1.2;
      translate: 60vw -40vh;
    }
    40% {
      opacity: 0.883;
      scale: 1.2 1.4;
      translate: 20vw -80vh;
    }
    60% {
      opacity: 0.882;
      scale: 1.3 1.3;
      translate: 0vw -40vh;
    }
  }

  .Blob4 {
    bottom: 0;
    left: 0;
    width: max(20vw, 360px);
    background-color: var(--color-violet);
    animation-name: motionBlob4;
  }

  @keyframes motionBlob5 {
    0%,
    100% {
      opacity: 0.883;
      scale: 1 1;
      translate: 0vw 0vh;
    }
    25% {
      opacity: 0.882;
      scale: 1.4 1.2;
      translate: -20vw 40vh;
    }
    50% {
      opacity: 0.884;
      scale: 1.2 1.4;
      translate: 40vw 80vh;
    }
    75% {
      opacity: 0.886;
      scale: 1.3 1.3;
      translate: 20vw 40vh;
    }
  }

  .Blob5 {
    top: 25%;
    left: 25%;
    width: max(20vw, 400px);
    background-color: var(--color-crayola);
    animation-name: motionBlob5;
  }

  @keyframes motionBlob6 {
    0%,
    100% {
      opacity: 0.882;
      scale: 1 1;
      translate: 0vw 0vh;
    }
    20% {
      opacity: 0.884;
      scale: 1.4 1.2;
      translate: 20vw -40vh;
    }
    50% {
      opacity: 0.882;
      scale: 1.2 1.4;
      translate: -20vw 0vh;
    }
    80% {
      opacity: 0.883;
      scale: 1.3 1.3;
      translate: 20vw 40vh;
    }
  }

  .Blob6 {
    top: 75%;
    left: 75%;
    width: max(20vw, 500px);
    background-color: #052dff;
    animation-name: motionBlob6;
  }

  @keyframes motionBlob7 {
    0%,
    100% {
      opacity: 0.884;
      scale: 1 1;
      translate: 0vw 0vh;
    }
    25% {
      opacity: 0.882;
      scale: 1.6 2;
      translate: -60vw -40vh;
    }
    50% {
      opacity: 0.883;
      scale: 1.4 1.2;
      translate: 40vw 60vh;
    }
    75% {
      opacity: 0.882;
      scale: 1.8 2;
      translate: -40vw -20vh;
    }
  }

  .Blob7 {
    top: 50%;
    left: 50%;
    width: max(20vw, 600px);
    background: linear-gradient(180deg, #e19249, #dee149, #e87c82, #ed254e);
    animation-name: motionBlob7;
  }
</style>
