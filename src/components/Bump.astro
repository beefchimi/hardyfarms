---
interface Props {
  id: string;
}

const {id} = Astro.props;

const bumpFlat = 'M0,8 C12,8 12,8 24,8 C36,8 36,8 48,8';
// const bumpUp = 'M0,12 C12,12 12,2 24,2 C36,2 36,12 48,12';
// const bumpDown = 'M0,2 C12,2 12,12 24,12 C36,12 36,2 48,2';
---

<svg
  id={id}
  xmlns="http://www.w3.org/2000/svg"
  viewBox="0 0 48 14"
  class="SvgBump"
>
  <path
    fill="none"
    stroke="#2a736a"
    stroke-width="3"
    stroke-linecap="round"
    stroke-linejoin="round"
    d={bumpFlat}></path>
</svg>

<style>
  /* --- Hover Animation --- */

  /*
  @keyframes bumpUpDown {
    0%,
    100% {
      d: path('M0,8 C12,8 12,8 24,8 C36,8 36,8 48,8');
    }
    40% {
      d: path('M0,12 C12,12 12,2 24,2 C36,2 36,12 48,12');
    }
    60% {
      d: path('M0,2 C12,2 12,12 24,12 C36,12 36,2 48,2');
    }
  }
  */

  @keyframes bumpUpDown {
    0% {
      d: path('M0,8 C12,8 12,8 24,8 C36,8 36,8 48,8');
    }
    50% {
      d: path('M0,12 C12,12 12,2 24,2 C36,2 36,12 48,12');
    }
    100% {
      d: path('M0,2 C12,2 12,12 24,12 C36,12 36,2 48,2');
    }
  }

  .SvgBump {
    overflow: visible;

    > path {
      animation-name: bumpUpDown;
      animation-duration: var(--speed-slow);
      animation-timing-function: linear; /* var(--ease); */
      animation-fill-mode: both;
      animation-direction: alternate;
      animation-iteration-count: infinite;

      /* animation-play-state: paused; */
    }

    /*
    &:hover path {
      animation-play-state: running;
    }
    */
  }
</style>
