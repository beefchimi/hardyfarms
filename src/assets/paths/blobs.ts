export type BlobShape =
  | 'jelly1'
  | 'jelly2'
  | 'jelly3'
  | 'jelly4'
  | 'goo1'
  | 'goo2'
  | 'goo3'
  | 'goo4';

const blobDataRaw: Record<BlobShape, string[]> = {
  jelly1: [
    'M360,132',
    'C768,-136 924,84',
    '1338,132',
    'C1752,180 1614,566',
    '1338,876',
    'C1060,1184 902,802',
    '358,876',
    'C-186,948 -48,400',
    '360,132',
    'Z',
  ],
  jelly2: [
    'M261,132',
    'C672,92 831,-136',
    '1239,132',
    'C1647,400 1785,948',
    '1241,876',
    'C697,802 539,1184',
    '261,876',
    'C-15,566 -150,172',
    '261,132',
    'Z',
  ],
  jelly3: [
    'M360,62',
    'C896,29 1115,-73',
    '1367,121',
    'C1619,315 1738,819',
    '1324,867',
    'C910,915 768,1135',
    '360,867',
    'C-48,599 -176,94',
    '360,62',
    'Z',
  ],
  jelly4: [
    'M261,123',
    'C532,-112 695,85',
    '1239,11',
    'C1783,-61 1647,599',
    '1239,867',
    'C831,1135 675,915',
    '261,867',
    'C-153,819 -10,358',
    '261,123',
    'Z',
  ],
  goo1: [
    'M316,148',
    'C825,-158 822,122',
    '1264,80',
    'C1706,38 1665,444',
    '1392,764',
    'C1118,1083 849,1013',
    '360,922',
    'C-129,830 -88,392',
    '316,148',
    'Z',
  ],
  goo2: [
    'M336,80',
    'C778,122 775,-158',
    '1284,148',
    'C1688,392 1729,830',
    '1240,922',
    'C751,1013 482,1083',
    '208,764',
    'C-65,444 -106,38',
    '336,80',
    'Z',
  ],
  goo3: [
    'M360,80',
    'C849,-11 1118,-82',
    '1392,237',
    'C1665,557 1706,964',
    '1264,922',
    'C822,880 825,1160',
    '316,854',
    'C-88,610 -129,172',
    '360,80',
    'Z',
  ],
  goo4: [
    'M208,238',
    'C482,-81 751,-11',
    '1240,80',
    'C1729,172 1688,610',
    '1284,854',
    'C775,1160 778,880',
    '336,922',
    'C-106,964 -65,558',
    '208,238',
    'Z',
  ],
};

export const blobPath: Record<BlobShape, string> = {
  jelly1: blobDataRaw.jelly1.join(' '),
  jelly2: blobDataRaw.jelly2.join(' '),
  jelly3: blobDataRaw.jelly3.join(' '),
  jelly4: blobDataRaw.jelly4.join(' '),
  goo1: blobDataRaw.goo1.join(' '),
  goo2: blobDataRaw.goo2.join(' '),
  goo3: blobDataRaw.goo3.join(' '),
  goo4: blobDataRaw.goo4.join(' '),
};

/*
export const generated = Object.entries(blobDataRaw).reduce((collection, [key, value]) => {
  return {
    ...collection,
    [key]: value.join(' '),
  };
}, {} as Record<BlobShape, string>);
*/
